题目描述：一个数组有 N 个元素，求连续子数组的最大和。 例如：[-1,2,1]，和最大的连续子数组为[2,1]，其和为 3
输入：
    为两行。 第一行一个整数n(1 <= n <= 100000)，表示一共有n个元素 第二行为n个数，即每个元素,每个整数都在32位int范围内。以空格分隔。
输出描述:
    所有连续子数组中和最大的值。
代码：
#include <iostream>
using namespace std;
int arr[100005];
int main(){
    int n;
    while(cin>>n){
    	int curSum=0,maxSum=-1e5;
        for(int i=0;i<n;i++) {
        	cin>>arr[i];
        	curSum+=arr[i];
        	if(curSum>maxSum) maxSum = curSum;
        	if(curSum<0) curSum=0;
		}
       	cout<<maxSum<<endl;
    }
}
