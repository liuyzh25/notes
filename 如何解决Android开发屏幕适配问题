1.尽量使用wrap_content 和 match_parent
2.使用relativeLayout:
android:layout_above 将该控件的底部置于给定id的控件之上
android:layout_below 将该控件的顶部置于给定id的控件之下
android:layout_toLeftOf 将该控件的右边缘和给定id的控件的左边缘对齐
android:layout_toRightOf 将该控件的左边缘和给定id的控件的右边缘对齐

android:layout_alignBaseline 将该控件的baseline和给定id的控件的baseline对齐
android:layout_alignBottom 将该控件的底部边缘与给定id的控件的底部边缘对齐
android:layout_alignLeft 将该控件的左边缘和给定id的控件的左边缘对齐
android:layout_alignRight 将该控件的右边缘和给定id的控件的右边缘对齐
android:layout_alignTop 将该控件的顶部边缘和给定id的控件的顶部边缘对齐

android:layout_alignParentBottom如果该值为true，则将该控件的底部边缘和父控件的底部边缘对齐
android:layout_alignParentLeft 如果该值为true，则将该控件的左边缘和父控件的左边缘对齐
android:layout_alignParentRight 如果该值为true，则将该控件的右边缘和父控件的右边缘对齐
android:layout_alignParentTop 如果该值为true，则将该控件的顶部边缘和父控件的顶部边缘对齐

android:layout_centerHorizontal 如果该值为true，该控件将被置于水平方向的中央
android:layout_centerInParent 如果该值为true，该控件将被置于父控件水平方向的中央
android:layout_centerVertical 如果该值为true，该控件将被置于垂直方向的中央
